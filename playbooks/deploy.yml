---
- name: Ensure hosts are compatible
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: Group by distribution
      ansible.builtin.group_by:
        key: "{{ ansible_distribution }}"
      changed_when: false
  tags:
    - always

- name: Deploy custom configuration
  vars:
    distributions:
      - Pop!_OS
      - Kali
    goss_dir: "/opt/goss"
  hosts: "{{ distributions | join(',') }}"
  become: true
  gather_facts: false
  handlers:
    - ansible.builtin.import_tasks: "{{ playbook_dir + '/handlers/handlers.yml' }}"
  vars_prompt:
    - name: user
      prompt: Enter local username
      private: false
  pre_tasks:
    - tags:
        - always
      block:
        - ansible.builtin.include_tasks: "{{ [playbook_dir,'tasks',item] | join('/') }}"
          loop:
            - facts.yml
            - apt_cache.yml
            - goss.yml
  roles:
    - alacritty
    - bitwarden_cli
    - bpytop
    - cosmic
    - crt
    - dircolors
    - discord
    - git
    - gtk
    - hardening
    - himalaya
    - mpd
    - ncmpcpp
    - neofetch
    - neovim
    - pandoc
    - protonmail_bridge
    - protonvpn_cli
    - qutebrowser
    - ranger
    - signal_desktop
    - tty_clock
    - zathura
  tasks:
    - name: install misc pkgs
      ansible.builtin.apt:
        state: latest
        pkg: "{{ misc_pkgs | default([]) }}"
      tags:
        - misc-pkgs
  post_tasks:
    - name: validate
      goss:
        path: "{{ goss_dir + '/goss.yml' }}"
        format: documentation
        output_file: "{{ goss_dir + '/validate.log' }}"
...
